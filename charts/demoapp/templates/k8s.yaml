apiVersion: apps/v1
kind: Deployment
metadata:
  name: movie-ui
  labels:
    app: movie-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: movie-ui
  template:
    metadata:
      labels:
        app: movie-ui
    spec:
      containers:
        - name: smx
          image: modeseven/reactfrontend:{{ .Values.uiImageTag }}
          ports:
            - containerPort: 80
          env:
          - name: KEYCLOAK_HOST
            value: {{ .Values.keycloakHost }}
---
apiVersion: v1
kind: Service
metadata:
  name: movie-ui
spec:
  selector:
    app: movie-ui
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: movie-api
  labels:
    app: movie-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: movie-api
  template:
    metadata:
      labels:
        app: movie-api
    spec:
      containers:
        - name: movie-api
          image: modeseven/mongobackend:{{ .Values.apiImageTag }}
          ports:
            - containerPort: 8080
          env:
          - name: MONGODB_HOST
            value: {{ .Values.mongoHost }}
          - name: MONGODB_PORT
            value: {{ quote .Values.mongoPort }}
          - name: KEYCLOAK_HOST
            value: {{ .Values.keycloakHost }}
---
apiVersion: v1
kind: Service
metadata:
  name: movie-api
spec:
  selector:
    app: movie-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "movies-ingress"
spec:
  rules:
  - host: "movies.192.168.1.150.nip.io"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
            service: 
                name: "movie-ui"
                port:
                   number: 80
      - pathType: Prefix
        path: "/api"
        backend:
            service: 
                name: "movie-api"
                port:
                   number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-server-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/enable-cors: 'true'
spec:
  tls:
  - hosts:
      - demoapp.mbegley.net
    secretName: demoapp-secret
  rules:
  - host: demoapp.mbegley.net
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
            service: 
                name: "movie-ui"
                port:
                   number: 80
      - pathType: Prefix
        path: "/api"
        backend:
            service: 
                name: "movie-api"
                port:
                   number: 8080



            