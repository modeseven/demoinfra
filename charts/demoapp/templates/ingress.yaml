apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-server-ingress
  namespace: demoapp
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /movies-api/$1
    # nginx.ingress.kubernetes.io/x-forwarded-prefix: "/movies-api"
    #nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  tls:
  - hosts:
      - demoapp.mbegley.net
    secretName: demoapp-secret
  rules:
  - host: demoapp.mbegley.net
    http:
      paths:
      - pathType: Prefix
        path: /movies-api/?(.*)
        backend:
            service: 
                name: "movie-api"
                port:
                   number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-ui-ingress
  namespace: demoapp
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    # nginx.ingress.kubernetes.io/x-forwarded-prefix: "/movies-api"
    #nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  tls:
  - hosts:
      - demoapp.mbegley.net
    secretName: demoapp-secret
  rules:
  - host: demoapp.mbegley.net
    http:
      paths:
      - pathType: Prefix
        path: /?(.*)
        backend:
            service: 
                name: "movie-ui"
                port:
                  number: 80
