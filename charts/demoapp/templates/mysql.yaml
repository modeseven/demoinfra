apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: {{ .Values.mySqlImage }}
        name: mysql
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: root_password
        - name: MYSQL_PASSWORD
          value: password
        - name: MYSQL_USER
          value: keycloak
        - name: MYSQL_DATABASE
          value: keycloak
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: keycloak-mysql-{{ .Values.env }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "keycloak-mysql-{{ .Values.env }}"
  labels:
    type: "local"
spec:
  storageClassName: "local"
  capacity:
    storage: "5Gi"
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/{{ .Values.rootVolumeFolder }}/{{ .Release.Name }}-{{ .Values.env }}/keycloak-mysql-{{ .Values.env }}"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "keycloak-mysql-{{ .Values.env }}"
spec:
  volumeName: "keycloak-mysql-{{ .Values.env }}"
  storageClassName: "local"
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi